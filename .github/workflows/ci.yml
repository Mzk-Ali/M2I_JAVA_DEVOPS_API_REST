# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  test_code_quality:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Execute test and code quality
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar jacoco:check --file pom.xml -Dsonar.projectKey=Mzk-Ali_M2I_JAVA_DEVOPS_API_REST

    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
          generate-branches-badge: true
    - name: Commit the Jacoco badge (if it changed) # the generated badges have to be committed in order to be available on the readme.md file
      run: |
       if [[ `git status --porcelain *.svg` ]]; then
          git config --global user.name 'romainsessa'
          git config --global user.email 'romainsessa@users.noreply.github.com'
          git add *.svg
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
       fi

    - name: Upload JaCoCo Coverage Report
      uses: actions/upload-artifact@v4.6.2
      with:
        name: jacoco-report
        path: target/site/jacoco/


  build:
    runs-on: ubuntu-latest
    needs: test_code_quality

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: java-app-rest
        path: target/*.jar

  push_docker_hub:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: java-app-rest
          path: target

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: aliMzk/apiRest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/aliMzk/apiRest
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

